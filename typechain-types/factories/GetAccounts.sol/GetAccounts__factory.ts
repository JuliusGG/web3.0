/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  GetAccounts,
  GetAccountsInterface,
} from "../../GetAccounts.sol/GetAccounts";

const _abi = [
  {
    inputs: [
      {
        internalType: "string[]",
        name: "init",
        type: "string[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string[]",
        name: "staleAccounts",
        type: "string[]",
      },
      {
        indexed: false,
        internalType: "string[]",
        name: "refreshedAccounts",
        type: "string[]",
      },
    ],
    name: "UpdatedMessages",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "accounts",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string[]",
        name: "refreshedAccounts",
        type: "string[]",
      },
    ],
    name: "update",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162000e6e38038062000e6e833981810160405281019062000037919062000475565b80600090805190602001906200004f92919062000057565b50506200052b565b828054828255906000526020600020908101928215620000ab579160200282015b82811115620000aa57825182908051906020019062000099929190620000be565b509160200191906001019062000078565b5b509050620000ba91906200014f565b5090565b828054620000cc90620004f5565b90600052602060002090601f016020900481019282620000f057600085556200013c565b82601f106200010b57805160ff19168380011785556200013c565b828001600101855582156200013c579182015b828111156200013b5782518255916020019190600101906200011e565b5b5090506200014b919062000177565b5090565b5b8082111562000173576000818162000169919062000196565b5060010162000150565b5090565b5b808211156200019257600081600090555060010162000178565b5090565b508054620001a490620004f5565b6000825580601f10620001b85750620001d9565b601f016020900490600052602060002090810190620001d8919062000177565b5b50565b6000604051905090565b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6200024082620001f5565b810181811067ffffffffffffffff8211171562000262576200026162000206565b5b80604052505050565b600062000277620001dc565b905062000285828262000235565b919050565b600067ffffffffffffffff821115620002a857620002a762000206565b5b602082029050602081019050919050565b600080fd5b600080fd5b600067ffffffffffffffff821115620002e157620002e062000206565b5b620002ec82620001f5565b9050602081019050919050565b60005b8381101562000319578082015181840152602081019050620002fc565b8381111562000329576000848401525b50505050565b6000620003466200034084620002c3565b6200026b565b905082815260208101848484011115620003655762000364620002be565b5b62000372848285620002f9565b509392505050565b600082601f830112620003925762000391620001f0565b5b8151620003a48482602086016200032f565b91505092915050565b6000620003c4620003be846200028a565b6200026b565b90508083825260208201905060208402830185811115620003ea57620003e9620002b9565b5b835b818110156200043857805167ffffffffffffffff811115620004135762000412620001f0565b5b8086016200042289826200037a565b85526020850194505050602081019050620003ec565b5050509392505050565b600082601f8301126200045a5762000459620001f0565b5b81516200046c848260208601620003ad565b91505092915050565b6000602082840312156200048e576200048d620001e6565b5b600082015167ffffffffffffffff811115620004af57620004ae620001eb565b5b620004bd8482850162000442565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806200050e57607f821691505b60208210811415620005255762000524620004c6565b5b50919050565b610933806200053b6000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c80630bd765db1461003b578063f2a40db814610057575b600080fd5b61005560048036038101906100509190610603565b610087565b005b610071600480360381019061006c9190610682565b6101b0565b60405161007e9190610737565b60405180910390f35b600080805480602002602001604051908101604052809291908181526020016000905b828210156101565783829060005260206000200180546100c990610788565b80601f01602080910402602001604051908101604052809291908181526020018280546100f590610788565b80156101425780601f1061011757610100808354040283529160200191610142565b820191906000526020600020905b81548152906001019060200180831161012557829003601f168201915b5050505050815260200190600101906100aa565b505050509050816000908051906020019061017292919061025c565b507ff5400c474c95192f5ec65606ade163c83b5743afb988bfcd15f48524da5fc36c81836040516101a49291906108c6565b60405180910390a15050565b600081815481106101c057600080fd5b9060005260206000200160009150905080546101db90610788565b80601f016020809104026020016040519081016040528092919081815260200182805461020790610788565b80156102545780601f1061022957610100808354040283529160200191610254565b820191906000526020600020905b81548152906001019060200180831161023757829003601f168201915b505050505081565b8280548282559060005260206000209081019282156102ab579160200282015b828111156102aa57825182908051906020019061029a9291906102bc565b509160200191906001019061027c565b5b5090506102b89190610342565b5090565b8280546102c890610788565b90600052602060002090601f0160209004810192826102ea5760008555610331565b82601f1061030357805160ff1916838001178555610331565b82800160010185558215610331579182015b82811115610330578251825591602001919060010190610315565b5b50905061033e9190610366565b5090565b5b8082111561036257600081816103599190610383565b50600101610343565b5090565b5b8082111561037f576000816000905550600101610367565b5090565b50805461038f90610788565b6000825580601f106103a157506103c0565b601f0160209004906000526020600020908101906103bf9190610366565b5b50565b6000604051905090565b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b610425826103dc565b810181811067ffffffffffffffff82111715610444576104436103ed565b5b80604052505050565b60006104576103c3565b9050610463828261041c565b919050565b600067ffffffffffffffff821115610483576104826103ed565b5b602082029050602081019050919050565b600080fd5b600080fd5b600067ffffffffffffffff8211156104b9576104b86103ed565b5b6104c2826103dc565b9050602081019050919050565b82818337600083830152505050565b60006104f16104ec8461049e565b61044d565b90508281526020810184848401111561050d5761050c610499565b5b6105188482856104cf565b509392505050565b600082601f830112610535576105346103d7565b5b81356105458482602086016104de565b91505092915050565b600061056161055c84610468565b61044d565b9050808382526020820190506020840283018581111561058457610583610494565b5b835b818110156105cb57803567ffffffffffffffff8111156105a9576105a86103d7565b5b8086016105b68982610520565b85526020850194505050602081019050610586565b5050509392505050565b600082601f8301126105ea576105e96103d7565b5b81356105fa84826020860161054e565b91505092915050565b600060208284031215610619576106186103cd565b5b600082013567ffffffffffffffff811115610637576106366103d2565b5b610643848285016105d5565b91505092915050565b6000819050919050565b61065f8161064c565b811461066a57600080fd5b50565b60008135905061067c81610656565b92915050565b600060208284031215610698576106976103cd565b5b60006106a68482850161066d565b91505092915050565b600081519050919050565b600082825260208201905092915050565b60005b838110156106e95780820151818401526020810190506106ce565b838111156106f8576000848401525b50505050565b6000610709826106af565b61071381856106ba565b93506107238185602086016106cb565b61072c816103dc565b840191505092915050565b6000602082019050818103600083015261075181846106fe565b905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806107a057607f821691505b602082108114156107b4576107b3610759565b5b50919050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600082825260208201905092915050565b6000610802826106af565b61080c81856107e6565b935061081c8185602086016106cb565b610825816103dc565b840191505092915050565b600061083c83836107f7565b905092915050565b6000602082019050919050565b600061085c826107ba565b61086681856107c5565b935083602082028501610878856107d6565b8060005b858110156108b457848403895281516108958582610830565b94506108a083610844565b925060208a0199505060018101905061087c565b50829750879550505050505092915050565b600060408201905081810360008301526108e08185610851565b905081810360208301526108f48184610851565b9050939250505056fea2646970667358221220aaa938390530fc9b255e5ab1d0860aa17fdf8faa5a172a4ffe82f31e133dec4564736f6c63430008090033";

type GetAccountsConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: GetAccountsConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class GetAccounts__factory extends ContractFactory {
  constructor(...args: GetAccountsConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    init: string[],
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<GetAccounts> {
    return super.deploy(init, overrides || {}) as Promise<GetAccounts>;
  }
  override getDeployTransaction(
    init: string[],
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(init, overrides || {});
  }
  override attach(address: string): GetAccounts {
    return super.attach(address) as GetAccounts;
  }
  override connect(signer: Signer): GetAccounts__factory {
    return super.connect(signer) as GetAccounts__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): GetAccountsInterface {
    return new utils.Interface(_abi) as GetAccountsInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): GetAccounts {
    return new Contract(address, _abi, signerOrProvider) as GetAccounts;
  }
}
